{"version":3,"sources":["types/Status.ts","features/filter.ts","features/todos.ts","features/currentTodo.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/NoMessageTodo/NoMessageTodo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","text","type","payload","value","defaultState","query","status","ALL","filterReducer","state","action","todos","todosReducer","todo","currentTodoReducer","rootReducer","combineReducers","filter","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","id","title","completed","dispatch","currentTodoId","className","classNames","onClick","todoActions","NoMessegeTodo","TodoList","visibleTodos","useMemo","ACTIVE","COMPLETED","toLowerCase","includes","length","map","TodoFilter","handleStatusChange","useCallback","filterAction","handleQueryChange","onSubmit","event","preventDefault","onChange","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoaded","setIsLoaded","useEffect","data","a","userId","visibleUser","Error","href","email","name","App","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ce59b62.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Status } from '../types/Status';\n\ntype QueryAction = {\n  type: 'filter/QUERY';\n  payload: string;\n};\n\ntype StatusAction = {\n  type: 'filter/STATUS';\n  payload: Status;\n};\n\nconst query = (text: string): QueryAction => (\n  { type: 'filter/QUERY', payload: text });\n\nconst status = (value: Status): StatusAction => (\n  { type: 'filter/STATUS', payload: value });\n\nexport const actions = { query, status };\n\ntype State = {\n  query: string;\n  status: Status;\n};\n\nconst defaultState: State = {\n  query: '',\n  status: Status.ALL,\n};\n\ntype Action = QueryAction | StatusAction;\n\nconst filterReducer = (state = defaultState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddTodosAction = {\n  type: 'todos/ADD';\n  payload: Todo[];\n};\n\ntype Action = AddTodosAction;\n\nconst addTodos = (todos: Todo[]): AddTodosAction => ({\n  type: 'todos/ADD',\n  payload: todos,\n});\n\nexport const actions = { addTodos };\n\nconst defaultState: { todos: Todo[] } = {\n  todos: [],\n};\n\nconst todosReducer = (state = defaultState, action: Action) => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return { ...state, todos: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { Todo } from '../types/Todo';\n\ntype DeleteTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\ntype State = Todo | null;\ntype Action = SetTodoAction | DeleteTodoAction;\n\nconst deleteTodo = (): DeleteTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, deleteTodo };\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return { ...state, ...action.payload };\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport currentTodoReducer from '../features/currentTodo';\n\nconst rootReducer = combineReducers({\n  filter: filterReducer,\n  todos: todosReducer,\n  currentTodo: currentTodoReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const dispatch = useAppDispatch();\n  const currentTodoId = useAppSelector((state) => state.currentTodo?.id);\n\n  return (\n    <tr data-cy=\"todo\" key={id}>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-success': completed,\n            'has-text-danger': !completed,\n          })}\n        >\n          {title}\n        </p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => dispatch(todoActions.setTodo(todo))}\n        >\n          <span className=\"icon\">\n            <i\n              className={classNames('far', {\n                'fa-eye': currentTodoId !== id,\n                'fa-eye-slash': currentTodoId === id,\n              })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","export const NoMessegeTodo = () => {\n  return (\n    <p className=\"notification is-warning\">\n      There are no todos matching current filter criteria\n    </p>\n  );\n};\n","import { useMemo } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { useAppSelector } from '../../app/hooks';\nimport { Status } from '../../types/Status';\nimport { NoMessegeTodo } from '../NoMessageTodo/NoMessageTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector((state) => state.todos.todos);\n  const status = useAppSelector((state) => state.filter.status);\n  const query = useAppSelector((state) => state.filter.query);\n\n  const visibleTodos = useMemo(() => {\n    const filteredTodos = todos\n      .filter((todo) => {\n        switch (status) {\n          case Status.ACTIVE:\n            return !todo.completed;\n\n          case Status.COMPLETED:\n            return todo.completed;\n\n          case Status.ALL:\n          default:\n            return todo;\n        }\n      })\n      .filter(({ title }) => (\n        title.toLowerCase().includes(query.toLowerCase())\n      ));\n\n    return filteredTodos;\n  }, [todos, status, query]);\n\n  return (\n    <>\n      {(!visibleTodos.length && query) && <NoMessegeTodo />}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map((todo) => (\n            <TodoItem key={todo.id} todo={todo} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterAction } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useAppDispatch();\n\n  const handleStatusChange = useCallback((value: string) => {\n    switch (value) {\n      case Status.ACTIVE:\n        return dispatch(filterAction.status(Status.ACTIVE));\n\n      case Status.COMPLETED:\n        return dispatch(filterAction.status(Status.COMPLETED));\n\n      case Status.ALL:\n      default:\n        return dispatch(filterAction.status(Status.ALL));\n    }\n  }, []);\n\n  const handleQueryChange = useCallback((value: string) => {\n    dispatch(filterAction.query(value));\n  }, []);\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => handleStatusChange(event.target.value)}\n          >\n            <option value={Status.ALL}>All</option>\n\n            <option value={Status.ACTIVE}>Active</option>\n\n            <option value={Status.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"button\"\n              onClick={() => handleQueryChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate-academy.github.io'\n  + '/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { Loader } from '../Loader';\nimport { actions as todoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    const data = async () => {\n      try {\n        if (!currentTodo) {\n          return;\n        }\n\n        const visibleUser = await getUser(currentTodo.userId);\n\n        setUser(visibleUser);\n      } catch (error) {\n        throw new Error('error');\n      } finally {\n        setIsLoaded(false);\n      }\n    };\n\n    data();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoaded && <Loader />}\n\n      {user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"button\"\n              onClick={() => dispatch(todoActions.deleteTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoaded(true);\n\n    const data = async () => {\n      try {\n        const visibleTodos = await getTodos();\n\n        dispatch(todosActions.addTodos(visibleTodos));\n      } catch (error) {\n        throw new Error('error');\n      } finally {\n        setIsLoaded(false);\n      }\n    };\n\n    data();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded && <Loader />}\n              {!isLoaded && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}